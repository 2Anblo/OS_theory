4.1文件
通过文件命名的方式来管理文件:——实现按名存取
	文件名.扩展名
文件结构：
	1.字节序列（无结构文件/流式文件）
	2.记录序列（固定长度序列）
	3.记录树（关键字域查找）
文件类型：
	1.普通文件/常规文件：
		ASCII码文件
		二进制文件
	2.目录（文件夹）
	3.特殊文件（UNIX中的一些外设/设备文件）
		字符型设备文件
		块设备文件
文件的存取方式：
	1.顺序存取——磁带
	2.随机存取
文件属性：——FCB 文件控制块（通常存放在目录项中）
	1.基本信息
		文件名
		文件类型
	2.空间属性信息
		文件长度
	3.文件权限信息
		创建者
		使用权限
	4.文件的使用性信息
		创建时间
		最后一次访问时间
文件操作：Create/Delete/Open/Close/Read/Write等等
		其中Open操作将FCB中的属性，控制信息读入内存

4.2目录
目录方式：
	单级目录系统：
		优点：简单实现
		缺点：查找慢；会有命名冲突
	二级目录系统：
		优点：不同用户之间没有命名冲突
		缺点：共享文件不方便
	层次目录结构：（目录树）
	需要用文件名+路径名来描述文件位置。
	有相对路径和绝对路径

4.3文件系统的实现
4.3.1文件系统布局
文件系统存储在磁盘上，磁盘可以分区。
	磁盘结构：
	磁盘最开始由主引导扇区（MBR通常在0扇区）
	后续是分区表（分区的起始和结束地址，是否为活动分区）
	各个分区结构：
	引导块：Boot block将分区信息读入系统并初始化。
	超级块：记录分区的相关参数
	空闲空间管理：空闲区记录（位示图（bmp）/链表）
	索引节点
	根目录
	数据区域
4.3.2文件的实现
三种不同物理结构：
1.连续分配
优点：简单，只要记录起始块号和长度就能存放文件信息。
缺点：文件与文件之间会出现碎片，需要磁盘紧缩来压缩空间。
2.链式分配（链接表）
优点：用离散的数据块存放数据。
缺点：查找文件必须按照链从头按顺序找到各个数据块。（随机访问困难）
	 指针（在块内）需要占用额外的空间。——隐式链接
在FAT表（文件分配表）中存放所有指针。——显式链接
3.索引分配
每个文件取任意一个块作为i结点（索引节点）。
每一个文件都有一个i结点，存放指针和文件属性。

4.3.3目录的实现
引入目录的主要功能是为了按名存取。
目录项：(a,b文件属性存放在不同位置)
(a)存放文件名+文件属性——不等长的目录方式
(b)存放文件名和i结点（UNIX），i结点存放文件属性。——目录项等长

4.3.4共享文件
链接技术：
1.硬链接
假设有B，C两个用户共享同一个文件，B,C在各自目录项中有不同文件名，但i结点指向同一处（文件属性相同）。
i结点记录Owner和Count属性。
Count个数不为0，文件不会被删除。
限制：不能跨越分区，只适用于文件链接，不适用于目录链接。
2.符号链接（软连接）
类似于快捷方式。
是一种LINK类型的文件，其内容是到另一个目录或文件的路径。

4.3.5磁盘空间管理
磁盘块大小的分配：（一般设置为2-4KB）
	块太小：数据读取速度慢，但空间利用率大。
	块太大：空间利用率降低，数据读取速度快。
使用位示图（固定大小，查找0所在位置）或者空闲链表数据结构记录哪些块空闲，哪些块被利用。

4.4.1MS-DOS文件系统
目录项大小为32位，最后4位存放文件大小。（系统限制文件最大不超过4GB）
采用FAT表显式链接方式

FAT-12:用12位描述块的序号
FAT-16:用16位描述块的序号
FAT-32:用28位描述块的序号（最大不超过2TB）

4.4.2 UNIX-v7文件系统
采用i结点方式。
i结点中可以存放一级间接块，二级间接块，三级间接块指针。
所有i结点存放在一个一维数组中。